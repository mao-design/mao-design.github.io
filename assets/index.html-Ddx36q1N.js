import{_ as i,c as a,a as e,o as t}from"./app-CNIuUWnT.js";const n={};function l(h,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h2 id="equals-方法" tabindex="-1"><a class="header-anchor" href="#equals-方法"><span><code>equals</code> 方法</span></a></h2><ol><li><p><code>equals</code>是方法，不是运算符</p></li><li><p><code>equlas</code> 是 <code>Object</code> 中的方法，只能用来判断引用类型</p></li><li><p>默认判断的是内存地址是否相等，<code>Object</code>中有许多子类，而这些子类往往会重写 <code>equals</code> 方法</p></li><li><p><code>equals</code> 用来判断内容是否相等</p></li><li><p><code>equals</code> 比较的方法，判断传入的值是否相等，不管是否为两个新的对象</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Integer</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Integer</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> integer1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">equals</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">integer1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">));</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   // true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 两种写法都可以，但推荐这样写 &quot;jack&quot;.equals(name)</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">			name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">equals</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">jack</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 实际开发中一般使用的是下面这种写法，因为这样写可以避免空指针的问题</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">			&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">jack</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">equals</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">             </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">             // 两个引用类型进行比较</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">             String</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nihao</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">			String</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nihao</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">			name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">equals</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">name1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="equals-细节" tabindex="-1"><a class="header-anchor" href="#equals-细节"><span><code>equals</code> 细节</span></a></h3><ol><li>不同的对象内存地址不同，但是这里是特殊情况，同一字符串在常量词中只出行一次</li><li><code>equals</code>默认是比较两个对象的内存地址是否相等的</li></ol>`,4)]))}const k=i(n,[["render",l],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/java/6zvua133/","title":"equals方法","lang":"zh-CN","frontmatter":{"title":"equals方法","createTime":"2025/10/03 11:54:26","permalink":"/java/6zvua133/","description":"equals 方法 equals是方法，不是运算符 equlas 是 Object 中的方法，只能用来判断引用类型 默认判断的是内存地址是否相等，Object中有许多子类，而这些子类往往会重写 equals 方法 equals 用来判断内容是否相等 equals 比较的方法，判断传入的值是否相等，不管是否为两个新的对象 equals 细节 不同的对象内...","head":[["meta",{"property":"og:url","content":"https://mao-design.pages.dev/java/6zvua133/"}],["meta",{"property":"og:site_name","content":"Mao-Design的博客"}],["meta",{"property":"og:title","content":"equals方法"}],["meta",{"property":"og:description","content":"equals 方法 equals是方法，不是运算符 equlas 是 Object 中的方法，只能用来判断引用类型 默认判断的是内存地址是否相等，Object中有许多子类，而这些子类往往会重写 equals 方法 equals 用来判断内容是否相等 equals 比较的方法，判断传入的值是否相等，不管是否为两个新的对象 equals 细节 不同的对象内..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-12T16:48:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-12T16:48:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"equals方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-12T16:48:38.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":0.89,"words":268},"git":{"updatedTime":1757695718000,"contributors":[{"name":"mao-design","email":"2781406006@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/mao-design?v=4","url":"https://github.com/mao-design"}]},"autoDesc":true,"filePathRelative":"notes/Java/Java整理/23.equals方法.md","bulletin":false}');export{k as comp,d as data};
