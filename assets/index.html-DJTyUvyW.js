import{_ as e,c as a,a as r,o as n}from"./app-CNIuUWnT.js";const i="/assets/%E5%8C%BA%E5%88%AB1-NnIZ8zbX.png",o="/assets/%E5%8C%BA%E5%88%AB2-CmWtcjEO.png",s={};function p(g,t){return n(),a("div",null,t[0]||(t[0]=[r('<h2 id="string、stringbuffer与stringbuilder之间的区别" tabindex="-1"><a class="header-anchor" href="#string、stringbuffer与stringbuilder之间的区别"><span>String、StringBuffer与StringBuilder之间的区别</span></a></h2><p><img src="'+i+'" alt=""></p><p><img src="'+o+'" alt=""></p><h2 id="细节" tabindex="-1"><a class="header-anchor" href="#细节"><span>细节</span></a></h2><p>String</p><p>当通过 String s = &quot;a&quot;; 这种直接赋值的方式创建字符串时，Java 会将字符串 &quot;a&quot; 存入字符串常量池</p><p>若后续有其他变量也以同样方式赋值为 &quot;a&quot;（如 String s2 = &quot;a&quot;;），Java 会直接从常量池中复用已存在的 &quot;a&quot; 对象，而不会创建新对象。</p><p>因此，这些变量会指向常量池中同一个 &quot;a&quot; 对象的地址，即 s == s2 的结果为 true（== 比较的是地址）</p><p>StringBuffer</p><p><code>StringBuffer</code> 与 <code>String</code> 不同，<strong>即使多个 <code>StringBuffer</code> 对象的值相同，它们也会指向不同的内存地址</strong>，因为 <code>StringBuffer</code> 是通过 <code>new</code> 关键字创建的对象，且不会像 <code>String</code> 那样有常量池复用机制。</p>',10)]))}const d=e(s,[["render",p],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/java/tfs02s13/","title":"String类之间的区别","lang":"zh-CN","frontmatter":{"title":"String类之间的区别","createTime":"2025/10/03 11:54:26","permalink":"/java/tfs02s13/","description":"String、StringBuffer与StringBuilder之间的区别 细节 String 当通过 String s = \\"a\\"; 这种直接赋值的方式创建字符串时，Java 会将字符串 \\"a\\" 存入字符串常量池 若后续有其他变量也以同样方式赋值为 \\"a\\"（如 String s2 = \\"a\\";），Java 会直接从常量池中复用已存在的 \\"a\\" 对象...","head":[["meta",{"property":"og:url","content":"https://mao-design.pages.dev/java/tfs02s13/"}],["meta",{"property":"og:site_name","content":"Mao-Design的博客"}],["meta",{"property":"og:title","content":"String类之间的区别"}],["meta",{"property":"og:description","content":"String、StringBuffer与StringBuilder之间的区别 细节 String 当通过 String s = \\"a\\"; 这种直接赋值的方式创建字符串时，Java 会将字符串 \\"a\\" 存入字符串常量池 若后续有其他变量也以同样方式赋值为 \\"a\\"（如 String s2 = \\"a\\";），Java 会直接从常量池中复用已存在的 \\"a\\" 对象..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-12T16:48:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-12T16:48:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"String类之间的区别\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-12T16:48:38.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":0.76,"words":229},"git":{"updatedTime":1757695718000,"contributors":[{"name":"mao-design","email":"2781406006@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/mao-design?v=4","url":"https://github.com/mao-design"}]},"autoDesc":true,"filePathRelative":"notes/Java/Java整理/60.String类之间的区别.md","bulletin":false}');export{d as comp,m as data};
